name: "Terraform Apply (local-state debug)"
on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  TF_IN_AUTOMATION: true
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/tf-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Keep provider version the same as your project (adjust if needed)
      - name: Pin provider version for CI (v3)
        run: |
          cat > versions.ci.tf <<'EOF'
          terraform {
            required_providers {
              azurerm = {
                source  = "hashicorp/azurerm"
                version = "~> 3.96.0"
              }
            }
          }
          EOF

      # Remove only the backend "azurerm" block from files (in runner only)
      - name: Strip azurerm backend blocks (CI only)
        run: |
          set -e
          files=$(grep -RIl 'backend[[:space:]]*"azurerm"' . || true)
          if [ -n "$files" ]; then
            echo "Stripping backend blocks from:"
            echo "$files"
            for f in $files; do
              awk '
              /backend[[:space:]]*"azurerm"[[:space:]]*\{/ {inblk=1; depth=1; next}
              /\{/ && inblk {depth++}
              /\}/ && inblk {depth--; if (depth==0) {inblk=0; next}}
              !inblk {print}
              ' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
            done
          else
            echo "No backend azurerm blocks found."
          fi

      - name: Reset Terraform working dir
        run: |
          rm -rf .terraform .terraform.lock.hcl terraform.tfstate terraform.tfstate.backup

      - name: Terraform Init (local state)
        run: terraform init -backend=false -reconfigure -input=false

      - name: Terraform Apply (local state)
        run: terraform apply -auto-approve -input=false
